apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: myproject-template
  generatename: ""
  namespace: ""
  selflink: ""
  uid: ""
  resourceversion: ""
  generation: 0
  creationtimestamp: "0001-01-01T00:00:00Z"
  deletiontimestamp: null
  deletiongraceperiodseconds: null
  labels: {}
  annotations: {}
  ownerreferences: []
  finalizers: []
  clustername: ""
  managedfields: []
objects:
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: python
      name: python
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/python:latest
              imagePullPolicy: Always
              name: python
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: ruby
      name: ruby
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/ruby:latest
              imagePullPolicy: Always
              name: ruby
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: django
      name: django
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/django:latest
              imagePullPolicy: Always
              name: django
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-gradle
      name: java-gradle
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/java-gradle:latest
              imagePullPolicy: Always
              name: java-gradle
              ports:
                - containerPort: 9080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-maven
      name: java-maven
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/java-maven:latest
              imagePullPolicy: Always
              name: java-maven
              ports:
                - containerPort: 9080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-war
      name: java-war
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/java-war:latest
              imagePullPolicy: Always
              name: java-war
              ports:
                - containerPort: 9080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs
      name: nodejs
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/nodejs:latest
              imagePullPolicy: Always
              name: nodejs
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: php
      name: php
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/php:latest
              imagePullPolicy: Always
              name: php
              ports:
                - containerPort: 8082
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rust
      name: rust
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/rust:latest
              imagePullPolicy: Always
              name: rust
              ports:
                - containerPort: 8085
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
  - apiVersion: serving.knative.dev/v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: golang
      name: golang
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - image: quay.io/myproject/golang:latest
              imagePullPolicy: Always
              name: golang
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
          securityContext: {}
    status: {}
parameters: []
