apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: myproject-template
  generatename: ""
  namespace: ""
  selflink: ""
  uid: ""
  resourceversion: ""
  generation: 0
  creationtimestamp: "0001-01-01T00:00:00Z"
  deletiontimestamp: null
  deletiongraceperiodseconds: null
  labels: {}
  annotations: {}
  ownerreferences: []
  finalizers: []
  clustername: ""
  managedfields: []
objects:
  - apiVersion: triggers.tekton.dev/v1alpha1
    kind: TriggerTemplate
    metadata:
      creationTimestamp: null
      name: myproject-run-clone-build-push
    spec:
      resourcetemplates:
        - apiVersion: tekton.dev/v1beta1
          kind: PipelineRun
          metadata:
            creationTimestamp: null
            name: myproject-clone-build-push-$(uid)
          spec:
            params:
              - name: image-registry-url
                value: quay.io/test
            pipelineRef:
              name: myproject-clone-build-push
            serviceAccountName: myproject-clone-push
            workspaces:
              - name: myproject-shared-data
                volumeClaimTemplate:
                  metadata:
                    creationTimestamp: null
                  spec:
                    accessModes:
                      - ReadWriteOnce
                    resources:
                      requests:
                        storage: 1Gi
                    storageClassName: default
                  status: {}
          status: {}
    status: {}
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      name: myproject-tekton-triggers-admin
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: myproject-tekton-triggers-admin
    subjects:
      - kind: ServiceAccount
        name: myproject-tekton-triggers-admin
  - apiVersion: triggers.tekton.dev/v1alpha1
    kind: EventListener
    metadata:
      creationTimestamp: null
      name: myproject-git-repo
    spec:
      namespaceSelector: {}
      resources: {}
      serviceAccountName: myproject-tekton-triggers-admin
      triggers:
        - bindings:
            - ref: myproject-git-event
          template:
            ref: myproject-run-clone-build-push
    status:
      configuration:
        generatedName: ""
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: myproject-git-repo
      name: myproject-git-repo
    spec:
      host: https://c130-e.us-south.containers.cloud.ibm.com:30958
      path: /el-myproject-git-repo
      port:
        targetPort: port-8080
      to:
        kind: Service
        name: myproject-git-repo
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: v1
    data:
      .dockerconfigjson: PFRPRE86IGluc2VydCB5b3VyIGRvY2tlciBjb25maWcganNvbj4=
    kind: Secret
    metadata:
      annotations:
        tekton.dev/docker-0: ""
      creationTimestamp: null
      name: myproject-image-registry
    type: kubernetes.io/dockerconfigjson
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      name: myproject-tekton-triggers-admin
    rules:
      - apiGroups:
          - triggers.tekton.dev
        resources:
          - eventlisteners
          - triggerbindings
          - triggertemplates
        verbs:
          - get
      - apiGroups:
          - tekton.dev
        resources:
          - pipelineruns
        verbs:
          - create
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      name: myproject-tekton-triggers-admin
  - apiVersion: tekton.dev/v1beta1
    kind: Pipeline
    metadata:
      creationTimestamp: null
      name: myproject-clone-build-push
    spec:
      params:
        - description: registry-domain/namespace where the output image should be pushed.
          name: image-registry-url
          type: string
      tasks:
        - name: clone-1
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-1
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/java-war
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-1
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-2
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-1
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-2
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/golang
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-2
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-3
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-2
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-3
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/php
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-3
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-4
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-3
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-4
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/ruby
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-4
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-5
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-4
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-5
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/nodejs
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-5
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-6
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-5
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-6
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/django
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-6
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-7
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-6
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-7
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/java-maven
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-7
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-8
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-7
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-8
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/java-gradle
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-8
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-9
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-8
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-9
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/rust
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-9
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
        - name: clone-10
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          runAfter:
            - build-push-9
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: myproject-shared-data
        - name: build-push-10
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/python
            - name: DOCKERFILE
              value: '<TODO: insert path to the Dockerfile>'
            - name: CONTEXT
              value: '<TODO: insert path to the directory containing Dockerfile>'
          runAfter:
            - clone-10
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: myproject-shared-data
      workspaces:
        - description: This workspace will receive the cloned git repo and be passed to the kaniko task for building the image.
          name: myproject-shared-data
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      name: myproject-clone-push
    secrets:
      - name: myproject-image-registry
  - apiVersion: triggers.tekton.dev/v1alpha1
    kind: TriggerBinding
    metadata:
      creationTimestamp: null
      name: myproject-git-event
    spec: {}
    status: {}
parameters: []
