apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: myproject-template
  generatename: ""
  namespace: ""
  selflink: ""
  uid: ""
  resourceversion: ""
  generation: 0
  creationtimestamp: "0001-01-01T00:00:00Z"
  deletiontimestamp: null
  deletiongraceperiodseconds: null
  labels: {}
  annotations: {}
  ownerreferences: []
  finalizers: []
  clustername: ""
  managedfields: []
objects:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: php
      name: php
    spec:
      host: myproject.com
      path: /php
      port:
        targetPort: port-8082
      to:
        kind: Service
        name: php
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: python-latest
      name: python-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: python
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: django
      name: django
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: django
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: golang
      name: golang
    spec:
      host: myproject.com
      path: /golang
      port:
        targetPort: port-8080
      to:
        kind: Service
        name: golang
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: golang
      name: golang
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: golang
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-war-latest
      name: java-war-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: java-war
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs
      name: nodejs
    spec:
      host: myproject.com
      path: /nodejs
      port:
        targetPort: port-8080
      to:
        kind: Service
        name: nodejs
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs
      name: nodejs
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: nodejs
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rust
      name: rust
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8085
          port: 8085
          protocol: TCP
          targetPort: 8085
      selector:
        move2kube.konveyor.io/service: rust
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-maven
      name: java-maven
    spec:
      host: myproject.com
      path: /java-maven
      port:
        targetPort: port-9080
      to:
        kind: Service
        name: java-maven
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: php
      name: php
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: php
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: php
          name: php
        spec:
          containers:
            - image: quay.io/myproject/php:latest
              imagePullPolicy: Always
              name: php
              ports:
                - containerPort: 8082
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rust
      name: rust
    spec:
      host: myproject.com
      path: /rust
      port:
        targetPort: port-8085
      to:
        kind: Service
        name: rust
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-gradle
      name: java-gradle
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: java-gradle
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: java-gradle
          name: java-gradle
        spec:
          containers:
            - image: quay.io/myproject/java-gradle:latest
              imagePullPolicy: Always
              name: java-gradle
              ports:
                - containerPort: 9080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-gradle
      name: java-gradle
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-9080
          port: 9080
          protocol: TCP
          targetPort: 9080
      selector:
        move2kube.konveyor.io/service: java-gradle
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-war
      name: java-war
    spec:
      host: myproject.com
      path: /java-war
      port:
        targetPort: port-9080
      to:
        kind: Service
        name: java-war
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: python
      name: python
    spec:
      host: myproject.com
      path: /python
      port:
        targetPort: port-8080
      to:
        kind: Service
        name: python
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: ruby
      name: ruby
    spec:
      host: myproject.com
      path: /ruby
      port:
        targetPort: port-8080
      to:
        kind: Service
        name: ruby
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rust
      name: rust
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: rust
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: rust
          name: rust
        spec:
          containers:
            - image: quay.io/myproject/rust:latest
              imagePullPolicy: Always
              name: rust
              ports:
                - containerPort: 8085
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: django
      name: django
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: django
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: django
          name: django
        spec:
          containers:
            - image: quay.io/myproject/django:latest
              imagePullPolicy: Always
              name: django
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: golang
      name: golang
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: golang
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: golang
          name: golang
        spec:
          containers:
            - image: quay.io/myproject/golang:latest
              imagePullPolicy: Always
              name: golang
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-gradle-latest
      name: java-gradle-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: java-gradle
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-gradle
      name: java-gradle
    spec:
      host: myproject.com
      path: /java-gradle
      port:
        targetPort: port-9080
      to:
        kind: Service
        name: java-gradle
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: python
      name: python
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: python
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: python
          name: python
        spec:
          containers:
            - image: quay.io/myproject/python:latest
              imagePullPolicy: Always
              name: python
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: python
      name: python
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: python
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: golang-latest
      name: golang-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: golang
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: php
      name: php
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8082
          port: 8082
          protocol: TCP
          targetPort: 8082
      selector:
        move2kube.konveyor.io/service: php
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: ruby-latest
      name: ruby-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: ruby
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: ruby
      name: ruby
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: ruby
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rust-latest
      name: rust-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: rust
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: django-latest
      name: django-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: django
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: django
      name: django
    spec:
      host: myproject.com
      path: /django
      port:
        targetPort: port-8080
      to:
        kind: Service
        name: django
        weight: 1
    status:
      ingress:
        - {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-war
      name: java-war
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: java-war
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: java-war
          name: java-war
        spec:
          containers:
            - image: quay.io/myproject/java-war:latest
              imagePullPolicy: Always
              name: java-war
              ports:
                - containerPort: 9080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-war
      name: java-war
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-9080
          port: 9080
          protocol: TCP
          targetPort: 9080
      selector:
        move2kube.konveyor.io/service: java-war
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-maven-latest
      name: java-maven-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: java-maven
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: php-latest
      name: php-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: php
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: ruby
      name: ruby
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: ruby
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: ruby
          name: ruby
        spec:
          containers:
            - image: quay.io/myproject/ruby:latest
              imagePullPolicy: Always
              name: ruby
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-maven
      name: java-maven
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: java-maven
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: java-maven
          name: java-maven
        spec:
          containers:
            - image: quay.io/myproject/java-maven:latest
              imagePullPolicy: Always
              name: java-maven
              ports:
                - containerPort: 9080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: java-maven
      name: java-maven
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-9080
          port: 9080
          protocol: TCP
          targetPort: 9080
      selector:
        move2kube.konveyor.io/service: java-maven
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs
      name: nodejs
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: nodejs
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: nodejs
          name: nodejs
        spec:
          containers:
            - image: quay.io/myproject/nodejs:latest
              imagePullPolicy: Always
              name: nodejs
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs-latest
      name: nodejs-latest
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: nodejs
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
parameters:
  - name: COMMON_REPLICAS
    value: "2"
